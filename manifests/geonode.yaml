geonode:
  image:
    name: geonode/geonode
    tag: '3.1'
  # You can use this to pass any env from https://docs.geonode.org/en/master/basic/settings/index.html
  extraEnvs:
    CLIENT_RESULTS_LIMIT: '25'
    SOCIALACCOUNT_WITH_GEONODE_LOCAL_SINGUP: "False"
    C_FORCE_ROOT: '1'
    # This allows geonode to expose some proxy URLs to whitelisted domains below. 'geoserver' is required to enable printing
    PROXY_ALLOWED_HOSTS: 'localhost,django,geonode,geoserver,spatialreference.org,nominatim.openstreetmap.org,dev.openlayers.org'

    # Session/Access Control
    LOCKDOWN_GEONODE: 'False'
    CORS_ORIGIN_ALLOW_ALL: 'True'
    X_FRAME_OPTIONS: ALLOW-FROM ALL
    SESSION_EXPIRED_CONTROL_ENABLED: 'True'
    DEFAULT_ANONYMOUS_VIEW_PERMISSION: 'True'
    DEFAULT_ANONYMOUS_DOWNLOAD_PERMISSION: 'True'

    # Users Registration
    ACCOUNT_EMAIL_REQUIRED: 'True'
    ACCOUNT_APPROVAL_REQUIRED: 'False'
    ACCOUNT_CONFIRM_EMAIL_ON_GET: 'False'
    ACCOUNT_EMAIL_VERIFICATION: none
    ACCOUNT_EMAIL_CONFIRMATION_EMAIL: 'False'
    ACCOUNT_EMAIL_CONFIRMATION_REQUIRED: 'False'
    ACCOUNT_AUTHENTICATION_METHOD: username_email
    AUTO_ASSIGN_REGISTERED_MEMBERS_TO_REGISTERED_MEMBERS_GROUP_NAME: 'True'

    # OAuth2
    OAUTH2_API_KEY: 

    # GeoNode APIs
    API_LOCKDOWN: 'False'
    TASTYPIE_APIKEY: 

    IS_FIRST_START: 'True'
    FORCE_REINIT: 'False'

  # Extra env vars to pass to geonode container - will be passed as a secret
  extraSecretEnvs: {}
  # Can be used to configure new base maps or any other setting from https://github.com/GeoNode/geonode/blob/master/geonode/settings.py
  # For base maps available in MapStore, see https://github.com/geosolutions-it/MapStore2/blob/master/web/client/utils/ConfigProvider.js
  extraConf: |
    EXTRA_BASE_LAYERS = [
      {
        "type": "tileprovider",
        "title": "OpenStreetMap Terrain",
        "thumbURL": "https://a.tile-cyclosm.openstreetmap.fr/cyclosm/10/594/518.png",
        "provider": "custom",
        "name": "cyclosm",
        "group": "background",
        "visibility": False,
        "url": "https://{s}.tile-cyclosm.openstreetmap.fr/cyclosm/{z}/{x}/{y}.png",
        "options": {
          "subdomains": [ "a", "b", "c" ]
        }
      },
      {
        "type": "tileprovider",
        "title": "OpenStreetMap B&W",
        "thumbURL": "https://tiles.wmflabs.org/bw-mapnik/0/0/0.png",
        "provider": "OpenStreetMap.BlackAndWhite",
        "name": "osmbw",
        "group": "background",
        "visibility": False
      },
      {
        "type": "tileprovider",
        "title": "CartoDB Light",
        "thumbURL": "https://a.basemaps.cartocdn.com/light_all/0/0/0.png",
        "provider": "CartoDB.Positron",
        "name": "cartol",
        "group": "background",
        "visibility": False
      },
      {
        "type": "tileprovider",
        "title": "Stamen Watercolor",
        "provider": "Stamen.Watercolor",
        "name": "Stamen.Watercolor",
        "source": "Stamen",
        "group": "background",
        "thumbURL": "https://stamen-tiles-c.a.ssl.fastly.net/watercolor/0/0/0.jpg",
        "visibility": False
      }
    ]
    MAPSTORE_BASELAYERS =  EXTRA_BASE_LAYERS + MAPSTORE_BASELAYERS
  extraConf2: |
    # Add Google provider
    SOCIALACCOUNT_PROVIDERS['google'] = {
      'SCOPE': [
        'profile',
        'email',
      ],
      'AUTH_PARAMS': {
        'access_type': 'online',
      }
    }
    if os.getenv('AUTH_DOMAIN'):
      SOCIALACCOUNT_PROVIDERS['google']['AUTH_PARAMS']['hd'] = os.getenv('AUTH_DOMAIN')
    INSTALLED_APPS += ('allauth.socialaccount.providers.google',)
    SOCIALACCOUNT_PROFILE_EXTRACTORS['google'] = "geonode.people.profileextractors.OpenIDExtractor"
geoserver:
  image:
    name: geonode/geoserver
    tag: '2.18.2'
  # A list of one-line custom EPSGs to add to GeoServer
  # see https://docs.geoserver.org/stable/en/user/configuration/crshandling/customcrs.html
  customEPSGs:
    - 1=PROJCS["TM_Rwanda",GEOGCS["GCS_ITRF_2005",DATUM["D_ITRF_2005",SPHEROID["GRS_1980",6378137.0,298.257222101]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Transverse_Mercator"],PARAMETER["False_Easting",500000.0],PARAMETER["False_Northing",5000000.0],PARAMETER["Central_Meridian",30.0],PARAMETER["Scale_Factor",0.9999],PARAMETER["Latitude_Of_Origin",0.0],UNIT["Meter",1.0]]
  extraCustomEPSGs: []

general:
  externalDomain: example.com
  externalScheme: https
  externalPort: 443
  debug: false
  # This user will have access to geonode UI but also the built-in Django admin interface (/admin)
  # Username is admin
  superUser:
    password: geonode
    email: support@example.com
  supportEmail: support@example.com
  storageSize: 10Gi
  serviceType: ClusterIP

ingress:
  enabled: false
  # Those are passed straight to the ingress
  annotations: {}
  tls: {}

smtp:
  host: smtp.gmail.com
  tls: true
  port: '587'
  user: 
  password: "changeme"
  from: 

global:
  # Will be used by this and all subcharts
  storageClass: standard

postgresql:
  enabled: true
  # The usernames will be the same as the database names
  geonodeDb: geonode
  geodataDb: geonode_data
  # Override this!
  password: Uxu3UhxFmK

  # TODO: support external db
  # For now we only support a db installed with a subchart

  # Standard postgres chart values
  # See https://artifacthub.io/packages/helm/bitnami/postgresql for docs
  # Override this!
  postgresqlPassword: admin
  initdbScriptsSecret: '{{ .Release.Name }}-postgres-init'

rabbitmq:
  auth:
    username: user
    # Override these!
    password: 3asgDlgwN7
    erlangCookie: jixYBsiZ9RivaLXC02pTwGjvIo0nHtVu